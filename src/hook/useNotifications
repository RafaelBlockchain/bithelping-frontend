import { useState, useEffect } from "react";
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

toast.configure();

const useNotifications = (contract, account) => {
  const [notifications, setNotifications] = useState([]);

  useEffect(() => {
    if (!contract || !account) return;

    const handleEvent = (event) => {
      const { event: eventName, returnValues } = event;
      const message = `Nuevo evento: ${eventName} - ${JSON.stringify(returnValues)}`;
      setNotifications((prev) => [...prev, { eventName, returnValues, timestamp: Date.now() }]);
      toast.info(message, { position: toast.POSITION.BOTTOM_RIGHT });
    };

    // Subscribir a todos los eventos del contrato
    const subscription = contract.events
      .allEvents({ fromBlock: "latest" })
      .on("data", handleEvent)
      .on("error", (error) => {
        console.error("Error en la suscripciÃ³n de eventos:", error);
      });

    return () => {
      subscription.unsubscribe();
    };
  }, [contract, account]);

  return { notifications };
};

export default useNotifications;
